_Component({
                selector: 'flk-slider',
                c: 'FlkSlider', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['option','slidesList','currentSlideIndex','pause','resume','prop','prev','next','current'],
                children: {},
                render: function (component) {
                    let elo8znu = eo('section',null,null,`class`,`flk-slider`);
let elXdt0X = eo('div',null,null, 'style', {height: component.option('height')},`class`,`slides-wrapper`);
component.slidesWrapperElement = elXdt0X;
elXdt0X.cls = {'fixed-height': component.option('height') != 'auto', centered: component.option('centered')};

            for (let className in elXdt0X.cls) {
                elXdt0X.classList.toggle(className, elXdt0X.cls[className]);
            }  
            for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let ii352P = 'ohUnc7f' + index;
let elve4kE = eo('div','58DV8tHeFpvl' + index+ii352P,null, eventListeners, {onmouseover:[function(e) {var $el = this;component.option('pauseOnHover') && component.pause()}],onmouseout:[function(e) {var $el = this;component.option('pauseOnHover') && component.resume()}]},`class`,`slide`);

                    if (! component.sliderElements) {
                        component.sliderElements = [];
                    }

                    Array.pushOnce(component.sliderElements, elve4kE);
                elve4kE.cls = {active: component.currentSlideIndex == index};

            for (let className in elve4kE.cls) {
                elve4kE.classList.toggle(className, elve4kE.cls[className]);
            }  
            let cnd8kFC = slide.image;
this.setState('stNVXeo', cnd8kFC);
if (cnd8kFC) { 
let elxEQgj = ev('img','VFlff'+ii352P,null,`src`,`${slide.image}`,`title`,`${slide.alt || slide.caption || component.prop('alt') || ''}`,`alt`,`${slide.alt || slide.caption || component.prop('alt') || ''}`);
}ec('div');
}
let cndq191 = component.option('navigation');
this.setState('stzmWeX', cndq191);
if (cndq191) { 
let eldxnYs = eo('section','FcQf',null,`class`,`navigation`);
let elxMMGc = eo('button','PBRf',null, eventListeners, {onclick:[function(e) {var $el = this;component.prev()}]},`type`,`button`,`class`,`nav prev`);
let elc1ROk = eo('i','Qyuf',null,`class`,`${fas(component.option('navigationIcons.prev')) + ' icon'}`);
ec('i');
ec('button');
let elk2zHr = eo('button','Yduf',null, eventListeners, {onclick:[function(e) {var $el = this;component.next()}]},`type`,`button`,`class`,`nav next`);
let el54b_Z = eo('i','KeKf',null,`class`,`${fas(component.option('navigationIcons.next')) + ' icon'}`);
ec('i');
ec('button');
ec('section');
}let cndxruZ = component.option('bullets');
this.setState('stdyJ4e', cndxruZ);
if (cndxruZ) { 
let elUuvKM = eo('section','LLrf',null,`class`,`bullets`);
for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiQ73T = 'GTJb8Zx' + index;
let elTRYHq = eo('span','wiSNDzb9ZqUo' + index+iiQ73T,null, eventListeners, {onclick:[function(e) {var $el = this;component.current(index)}]},`class`,`bullet`);
elTRYHq.cls = {active: component.currentSlideIndex == index};

            for (let className in elTRYHq.cls) {
                elTRYHq.classList.toggle(className, elTRYHq.cls[className]);
            }  
            ec('span');
}
ec('section');
}ec('div');
ec('section');

                    this.isReadyToGo();
                }
        });