_Component({
                selector: 'flk-slider',
                c: 'FlkSlider', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['option','slidesList','currentSlideIndex','pause','resume','prev','next','current'],
                children: {},
                render: function (component) {
                    let el8Jj6y = eo('section',null,null,`class`,`flk-slider`);
let el1YqRt = eo('div',null,null, 'style', {height: component.option('height')},`class`,`slides-wrapper`);
component.slidesWrapperElement = el1YqRt;
el1YqRt.cls = {'fixed-height': component.option('height') != 'auto', centered: component.option('centered')};

            for (let className in el1YqRt.cls) {
                el1YqRt.classList.toggle(className, el1YqRt.cls[className]);
            }  
            for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iikPuA = 'kVzmCC9' + index;
let elGhZnm = eo('div','0AvRh1QbrYFQ' + index+iikPuA,null, eventListeners, {onmouseover:[function(e) {var $el = this;component.option('pauseOnHover') && component.pause()}],onmouseout:[function(e) {var $el = this;component.option('pauseOnHover') && component.resume()}]},`class`,`slide`);

                    if (! component.sliderElements) {
                        component.sliderElements = [];
                    }

                    Array.pushOnce(component.sliderElements, elGhZnm);
                elGhZnm.cls = {active: component.currentSlideIndex == index};

            for (let className in elGhZnm.cls) {
                elGhZnm.classList.toggle(className, elGhZnm.cls[className]);
            }  
            let cnd7ibq = slide.image;
this.setState('stoIiBc', cnd7ibq);
if (cnd7ibq) { 
let eltWsXC = ev('img','nz1ff'+iikPuA,null,`src`,`${slide.image}`,`title`,`${slide.alt || slide.caption}`,`alt`,`${slide.alt || slide.caption}`);
}ec('div');
}
let cnd5o3S = component.option('navigation');
this.setState('st4cEIo', cnd5o3S);
if (cnd5o3S) { 
let elorsoW = eo('section','juLf',null,`class`,`navigation`);
let eljf5sM = eo('button','bBMf',null, eventListeners, {onclick:[function(e) {var $el = this;component.prev()}]},`type`,`button`,`class`,`nav prev`);
let elJHCoz = eo('fa','Z69f');
ec('fa');
ec('button');
let elAhx54 = eo('button','0uYf',null, eventListeners, {onclick:[function(e) {var $el = this;component.next()}]},`type`,`button`,`class`,`nav next`);
let el_zABy = eo('fa','0cpf');
ec('fa');
ec('button');
ec('section');
}let cndnNnf = component.option('bullets');
this.setState('stvi90q', cndnNnf);
if (cndnNnf) { 
let elNRJiw = eo('section','DBbf',null,`class`,`bullets`);
for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiXS8f = 'dIREwcR' + index;
let elacFoX = eo('span','IKXG5orG8l6R' + index+iiXS8f,null, eventListeners, {onclick:[function(e) {var $el = this;component.current(index)}]},`class`,`bullet`);
elacFoX.cls = {active: component.currentSlideIndex == index};

            for (let className in elacFoX.cls) {
                elacFoX.classList.toggle(className, elacFoX.cls[className]);
            }  
            ec('span');
}
ec('section');
}ec('div');
ec('section');

                    this.isReadyToGo();
                }
        });