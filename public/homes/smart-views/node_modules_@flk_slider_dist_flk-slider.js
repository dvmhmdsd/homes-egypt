_Component({
                selector: 'flk-slider',
                c: 'FlkSlider', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['option','slidesList','currentSlideIndex','pause','resume','prop','prev','next','current'],
                children: {},
                render: function (component) {
                    let elqBd68 = eo('section',null,null,`class`,`flk-slider`);
let elC66Si = eo('div',null,null, 'style', {height: component.option('height')},`class`,`slides-wrapper`);
component.slidesWrapperElement = elC66Si;
elC66Si.cls = {'fixed-height': component.option('height') != 'auto', centered: component.option('centered')};

            for (let className in elC66Si.cls) {
                elC66Si.classList.toggle(className, elC66Si.cls[className]);
            }  
            for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiGQFO = 'TZm_w2i' + index;
let eli_dlR = eo('div','SO9fAZX2nk8d' + index+iiGQFO,null, eventListeners, {onmouseover:[function(e) {var $el = this;component.option('pauseOnHover') && component.pause()}],onmouseout:[function(e) {var $el = this;component.option('pauseOnHover') && component.resume()}]},`class`,`slide`);

                    if (! component.sliderElements) {
                        component.sliderElements = [];
                    }

                    Array.pushOnce(component.sliderElements, eli_dlR);
                eli_dlR.cls = {active: component.currentSlideIndex == index};

            for (let className in eli_dlR.cls) {
                eli_dlR.classList.toggle(className, eli_dlR.cls[className]);
            }  
            let cndP55P = slide.image;
this.setState('stwIMQp', cndP55P);
if (cndP55P) { 
let elOTNhh = ev('img','a34ff'+iiGQFO,null,`src`,`${slide.image}`,`title`,`${slide.alt || slide.caption || component.prop('alt') || ''}`,`alt`,`${slide.alt || slide.caption || component.prop('alt') || ''}`);
}ec('div');
}
let cndhUGu = component.option('navigation');
this.setState('st1t3Wv', cndhUGu);
if (cndhUGu) { 
let elrYqWT = eo('section','aNqf',null,`class`,`navigation`);
let eltDQ3d = eo('button','aUrf',null, eventListeners, {onclick:[function(e) {var $el = this;component.prev()}]},`type`,`button`,`class`,`nav prev`);
let elm0ZdM = eo('i','mXKf',null,`class`,`${fas(component.option('navigationIcons.prev')) + ' icon'}`);
ec('i');
ec('button');
let elg7SNI = eo('button','lg6f',null, eventListeners, {onclick:[function(e) {var $el = this;component.next()}]},`type`,`button`,`class`,`nav next`);
let elrDTwY = eo('i','plkf',null,`class`,`${fas(component.option('navigationIcons.next')) + ' icon'}`);
ec('i');
ec('button');
ec('section');
}let cndtV6G = component.option('bullets');
this.setState('styWAol', cndtV6G);
if (cndtV6G) { 
let elA4ZFp = eo('section','geDf',null,`class`,`bullets`);
for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiQl7y = 'QsP9FP4' + index;
let elhLViv = eo('span','3tJ1UANXpVBT' + index+iiQl7y,null, eventListeners, {onclick:[function(e) {var $el = this;component.current(index)}]},`class`,`bullet`);
elhLViv.cls = {active: component.currentSlideIndex == index};

            for (let className in elhLViv.cls) {
                elhLViv.classList.toggle(className, elhLViv.cls[className]);
            }  
            ec('span');
}
ec('section');
}ec('div');
ec('section');

                    this.isReadyToGo();
                }
        });