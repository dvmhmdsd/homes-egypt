_Component({
                selector: 'flk-slider',
                c: 'FlkSlider', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['option','slidesList','currentSlideIndex','pause','resume','prop','prev','next','current'],
                children: {},
                render: function (component) {
                    let elSujQ3 = eo('section',null,null,`class`,`flk-slider`);
let eldlYLm = eo('div',null,null, 'style', {height: component.option('height')},`class`,`slides-wrapper`);
component.slidesWrapperElement = eldlYLm;
eldlYLm.cls = {'fixed-height': component.option('height') != 'auto', centered: component.option('centered')};

            for (let className in eldlYLm.cls) {
                eldlYLm.classList.toggle(className, eldlYLm.cls[className]);
            }  
            for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiSEYM = 'BDKH9or' + index;
let el9cEsP = eo('div','G1lU556RCPVw' + index+iiSEYM,null, eventListeners, {onmouseover:[function(e) {var $el = this;component.option('pauseOnHover') && component.pause()}],onmouseout:[function(e) {var $el = this;component.option('pauseOnHover') && component.resume()}]},`class`,`slide`);

                    if (! component.sliderElements) {
                        component.sliderElements = [];
                    }

                    Array.pushOnce(component.sliderElements, el9cEsP);
                el9cEsP.cls = {active: component.currentSlideIndex == index};

            for (let className in el9cEsP.cls) {
                el9cEsP.classList.toggle(className, el9cEsP.cls[className]);
            }  
            let cndMqb0 = slide.image;
this.setState('stHu1lf', cndMqb0);
if (cndMqb0) { 
let elDuW0G = ev('img','3QLff'+iiSEYM,null,`src`,`${slide.image}`,`title`,`${slide.alt || slide.caption || component.prop('alt') || ''}`,`alt`,`${slide.alt || slide.caption || component.prop('alt') || ''}`);
}ec('div');
}
let cndf_Dx = component.option('navigation');
this.setState('stQF1tZ', cndf_Dx);
if (cndf_Dx) { 
let elPBufC = eo('section','R_of',null,`class`,`navigation`);
let elSzbj7 = eo('button','Zrbf',null, eventListeners, {onclick:[function(e) {var $el = this;component.prev()}]},`type`,`button`,`class`,`nav prev`);
let elI6qrH = eo('i','44nf',null,`class`,`${fas(component.option('navigationIcons.prev')) + ' icon'}`);
ec('i');
ec('button');
let elKQtfh = eo('button','3cjf',null, eventListeners, {onclick:[function(e) {var $el = this;component.next()}]},`type`,`button`,`class`,`nav next`);
let elM843X = eo('i','mPDf',null,`class`,`${fas(component.option('navigationIcons.next')) + ' icon'}`);
ec('i');
ec('button');
ec('section');
}let cndyIqU = component.option('bullets');
this.setState('st7Mv4E', cndyIqU);
if (cndyIqU) { 
let elo4jGZ = eo('section','Zvpf',null,`class`,`bullets`);
for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiI_ro = 'EPnS1BG' + index;
let elZv5tY = eo('span','jctMXRhmQ70v' + index+iiI_ro,null, eventListeners, {onclick:[function(e) {var $el = this;component.current(index)}]},`class`,`bullet`);
elZv5tY.cls = {active: component.currentSlideIndex == index};

            for (let className in elZv5tY.cls) {
                elZv5tY.classList.toggle(className, elZv5tY.cls[className]);
            }  
            ec('span');
}
ec('section');
}ec('div');
ec('section');

                    this.isReadyToGo();
                }
        });