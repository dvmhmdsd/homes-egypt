_Component({
                selector: 'flk-slider',
                c: 'FlkSlider', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['option','slidesList','currentSlideIndex','pause','resume','alt','prev','next','current'],
                children: {},
                render: function (component) {
                    let elNHQKd = eo('section',null,null,`class`,`flk-slider`);
let elkDOEO = eo('div',null,null, 'style', {height: component.option('height')},`class`,`slides-wrapper`);
component.slidesWrapperElement = elkDOEO;
elkDOEO.cls = {'fixed-height': component.option('height') != 'auto', centered: component.option('centered')};

            for (let className in elkDOEO.cls) {
                elkDOEO.classList.toggle(className, elkDOEO.cls[className]);
            }  
            for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iijPCy = 'AknKhWI' + index;
let elmMA8B = eo('div','8vUA8fJbrrNn' + index+iijPCy,null, eventListeners, {onmouseover:[function(e) {var $el = this;component.option('pauseOnHover') && component.pause()}],onmouseout:[function(e) {var $el = this;component.option('pauseOnHover') && component.resume()}]},`class`,`slide`);

                    if (! component.sliderElements) {
                        component.sliderElements = [];
                    }

                    Array.pushOnce(component.sliderElements, elmMA8B);
                elmMA8B.cls = {active: component.currentSlideIndex == index};

            for (let className in elmMA8B.cls) {
                elmMA8B.classList.toggle(className, elmMA8B.cls[className]);
            }  
            let cndhPJo = slide.image;
this.setState('stM1DLo', cndhPJo);
if (cndhPJo) { 
let elj12sC = ev('img','v9Zff'+iijPCy,null,`src`,`${slide.image}`,`title`,`${slide.alt || slide.caption || component.alt || ''}`,`alt`,`${slide.alt || slide.caption || component.alt || ''}`);
}ec('div');
}
let cndrI7W = component.option('navigation');
this.setState('st4OTl2', cndrI7W);
if (cndrI7W) { 
let el5MDfY = eo('section','nbJf',null,`class`,`navigation`);
let elpo_uG = eo('button','RYZf',null, eventListeners, {onclick:[function(e) {var $el = this;component.prev()}]},`type`,`button`,`class`,`nav prev`);
let elkAZeI = eo('i','c41f',null,`class`,`${fas(component.option('navigationIcons.prev')) + ' icon'}`);
ec('i');
ec('button');
let elMBp5q = eo('button','WhYf',null, eventListeners, {onclick:[function(e) {var $el = this;component.next()}]},`type`,`button`,`class`,`nav next`);
let elS7N_k = eo('i','2PVf',null,`class`,`${fas(component.option('navigationIcons.next')) + ' icon'}`);
ec('i');
ec('button');
ec('section');
}let cndfagq = component.option('bullets');
this.setState('stG54h8', cndfagq);
if (cndfagq) { 
let elj2uqO = eo('section','z6Nf',null,`class`,`bullets`);
for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiwDOy = 'TGsPvUA' + index;
let elLOZmM = eo('span','kWlNugBTlYEG' + index+iiwDOy,null, eventListeners, {onclick:[function(e) {var $el = this;component.current(index)}]},`class`,`bullet`);
elLOZmM.cls = {active: component.currentSlideIndex == index};

            for (let className in elLOZmM.cls) {
                elLOZmM.classList.toggle(className, elLOZmM.cls[className]);
            }  
            ec('span');
}
ec('section');
}ec('div');
ec('section');

                    this.isReadyToGo();
                }
        });