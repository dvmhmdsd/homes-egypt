_Component({
                selector: 'flk-slider',
                c: 'FlkSlider', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['option','slidesList','currentSlideIndex','pause','resume','prev','next','current'],
                children: {},
                render: function (component) {
                    let elLe_d6 = eo('section',null,null,`class`,`flk-slider`);
let elFevgu = eo('div',null,null, 'style', {height: component.option('height')},`class`,`slides-wrapper`);
component.slidesWrapperElement = elFevgu;
elFevgu.cls = {'fixed-height': component.option('height') != 'auto', centered: component.option('centered')};

            for (let className in elFevgu.cls) {
                elFevgu.classList.toggle(className, elFevgu.cls[className]);
            }  
            for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let ii3WQE = 'dQtOlYe' + index;
let eljYMFy = eo('div','9PtK9_hAHjhb' + index+ii3WQE,null, eventListeners, {onmouseover:[function(e) {var $el = this;component.option('pauseOnHover') && component.pause()}],onmouseout:[function(e) {var $el = this;component.option('pauseOnHover') && component.resume()}]},`class`,`slide`);

                    if (! component.sliderElements) {
                        component.sliderElements = [];
                    }

                    Array.pushOnce(component.sliderElements, eljYMFy);
                eljYMFy.cls = {active: component.currentSlideIndex == index};

            for (let className in eljYMFy.cls) {
                eljYMFy.classList.toggle(className, eljYMFy.cls[className]);
            }  
            let cndl3mo = slide.image;
this.setState('stEgTVz', cndl3mo);
if (cndl3mo) { 
let el3tqiy = ev('img','kvtff'+ii3WQE,null,`src`,`${slide.image}`,`title`,`${slide.alt || slide.caption}`,`alt`,`${slide.alt || slide.caption}`);
}ec('div');
}
let cndXrrX = component.option('navigation');
this.setState('stRYpIk', cndXrrX);
if (cndXrrX) { 
let elTDBSP = eo('section','X45f',null,`class`,`navigation`);
let elOXCsw = eo('button','6jaf',null, eventListeners, {onclick:[function(e) {var $el = this;component.prev()}]},`type`,`button`,`class`,`nav prev`);
let elk_vBY = eo('fa','Gjkf');
ec('fa');
ec('button');
let elnjjb3 = eo('button','d04f',null, eventListeners, {onclick:[function(e) {var $el = this;component.next()}]},`type`,`button`,`class`,`nav next`);
let elJwvHb = eo('fa','_1Of');
ec('fa');
ec('button');
ec('section');
}let cndMBW2 = component.option('bullets');
this.setState('stEou7B', cndMBW2);
if (cndMBW2) { 
let elycPMf = eo('section','pIBf',null,`class`,`bullets`);
for (let index in component.slidesList) {
let slide = component.slidesList[index]; 
 let iiy9WR = '9BYeJ2M' + index;
let elO0trM = eo('span','ZxoggJo8LKYb' + index+iiy9WR,null, eventListeners, {onclick:[function(e) {var $el = this;component.current(index)}]},`class`,`bullet`);
elO0trM.cls = {active: component.currentSlideIndex == index};

            for (let className in elO0trM.cls) {
                elO0trM.classList.toggle(className, elO0trM.cls[className]);
            }  
            ec('span');
}
ec('section');
}ec('div');
ec('section');

                    this.isReadyToGo();
                }
        });