_Component({
                selector: 'flk-dropdown-list',
                c: 'DropDownList', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['theme','position','addtionalClasses','label','isRequired','toggle','imageable','currentImage','getHeading','getCheckedItems','name','_closed','searchable','getPlaceholder','searchInput','searchFor','itemsList','stopSelecting','isCheckedItem','attachForm','validate','changeStateOf','id','getInputType','error','errorClasses'],
                children: {},
                render: function (component) {
                    let elVQnA1 = eo('div',null,null,`class`,`dropdown-list ${ component.theme }-t ${ component.position } ${ component.addtionalClasses }`);
let cndwZyO = component.label;
this.setState('stKoTIg', cndwZyO);
if (cndwZyO) { 
let elLVCMY = eo('label','A2Of');
let elYjjBi = eo('span','JiFf');
text(component.label);
ec('span');
let cnd2axe = component.isRequired;
this.setState('stOGuZ6', cnd2axe);
if (cnd2axe) { 
let elK45PI = eo('span','5ukf',null,`class`,`required`);
text(`*`);
ec('span');
}ec('label');
}let eluBdlE = eo('div',null,null,`class`,`select-list`);
let elfEnbh = eo('button',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.toggle()}]},`type`,`button`,`class`,`heading`);
let cndYjFE = component.imageable && component.currentImage;
this.setState('stAYWIv', cndYjFE);
if (cndYjFE) { 
let elJR3uA = ev('img','lWkf',null,`src`,`${component.currentImage}`,`title`,`${component.getHeading()}`,`alt`,`${component.getHeading()}`);
}let elojSkG = eo('span');
text(component.getHeading());
ec('span');
ec('button');
for (let i in component.getCheckedItems()) {
let itemValue = component.getCheckedItems()[i]; 
 let iiYYKl = 'T0NgGqN' + i;
let elyUN0b = ev('input','oeXAEYMEjL4B' + i+iiYYKl,null, eventListeners, {oninput:[function(e) {itemValue = this.value;}]},`value`,`${fval(itemValue)}`,`name`,`${(component.name).toInputName()}`,`type`,`hidden`);
elyUN0b.value = fval(itemValue);
}
let elB_LBk = eo('ul',null,null,`class`,`items-list`);
elB_LBk.cls = {expanded: ! component._closed};

            for (let className in elB_LBk.cls) {
                elB_LBk.classList.toggle(className, elB_LBk.cls[className]);
            }  
            let cndiAWS = component.searchable;
this.setState('stvDYgH', cndiAWS);
if (cndiAWS) { 
let elgTCDa = eo('li','Ublf',null,`class`,`list-item search-item`);
let elVqfDG = ev('input','ukJf',null, eventListeners, {onready:[function(e) {var $el = this;component.searchInput = $el}],oninput:[function(e) {var $el = this;component.searchFor($el.value)}]},`placeholder`,`${component.getPlaceholder()}`);
elVqfDG.autocomplete = elVqfDG.name == 'password' && Is.browser('chrome') ? 'new-password' : 'off';

                    setTimeout(function () {
                        let $el = elVqfDG;
                        component.searchInput = $el;
                    }, 0);                
                ec('li');
}for (let index in component.itemsList) {
let item = component.itemsList[index]; 
 let iiqsOT = 'ot9vHo4' + index;
let elXMIqf = eo('li','TZokGb6ZDe3B' + index+iiqsOT,null,`class`,`list-item`);
elXMIqf.cls = {disabled: component.stopSelecting == true && ! component.isCheckedItem(item)};

            for (let className in elXMIqf.cls) {
                elXMIqf.classList.toggle(className, elXMIqf.cls[className]);
            }  
            let el3AKIj = ev('input','90cff'+iiqsOT,null, eventListeners, {oninput:[function(e) {item.value = this.value;},function(e) {var $el = this;component.validate($el)}],onready:[function(e) {var $el = this;component.attachForm($el.form)}],onchange:[function(e) {var $el = this;component.changeStateOf($el, item)}]}, boolAttrs, {checked:component.isCheckedItem(item)},`value`,`${fval(item.value)}`,`id`,`item-${ index + component.id }`,`type`,`${ component.getInputType() }`);
el3AKIj.value = fval(item.value);

                    setTimeout(function () {
                        let $el = el3AKIj;
                        component.attachForm($el.form);
                    }, 0);                
                let elagDUU = eo('label','mtXff'+iiqsOT,null, boolAttrs, {disabled:component.stopSelecting == true && ! component.isCheckedItem(item)},`for`,`item-${ index + component.id }`);
let elDwFyX = eo('span','jC6ff'+iiqsOT);
ec('span');
let cndXNbL = component.imageable;
this.setState('st849OU', cndXNbL);
if (cndXNbL) { 
let elVwqvw = ev('img','pbfff'+iiqsOT,null,`src`,`${item.image}`,`title`,`${item.text}`,`alt`,`${item.text}`);
}let el4KmCZ = eo('i','Nc5ff'+iiqsOT);
text(item.text);
ec('i');
ec('label');
ec('li');
}
ec('ul');
ec('div');
let cndtlez = component.error;
this.setState('stnIK2u', cndtlez);
if (cndtlez) { 
let elQqNgD = eo('div','JWTf',null,`class`,`${ component.errorClasses }`);
text(component.error);
ec('div');
}ec('div');

                    this.isReadyToGo();
                }
        });